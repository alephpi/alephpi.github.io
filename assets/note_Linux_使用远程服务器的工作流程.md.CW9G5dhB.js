import{_ as n,c as a,ao as l,o}from"./chunks/framework.n-91xA-b.js";const d=JSON.parse('{"title":"使用远程服务器的工作流程","description":"","frontmatter":{"title":"使用远程服务器的工作流程","date":"2023-11-14T10:32:08.928Z","length":"546字","time":"2分钟","aside":true,"hash":405637510},"headers":[],"relativePath":"note/Linux/使用远程服务器的工作流程.md","filePath":"note/Linux/使用远程服务器的工作流程.md"}'),p={name:"note/Linux/使用远程服务器的工作流程.md"};function t(e,s,c,r,y,i){return o(),a("div",null,s[0]||(s[0]=[l(`<p>今天向同事请教了一下使用远程服务器的工作流程，感觉比我之前的流程更合理，分享给各位。</p><p>首先假设诸位已经熟悉通过 ssh 隧道与远程服务器建立连接的基础知识，这里不再赘述。</p><p>有服务器算力支持情况下，是在本地编程调试然后上传服务器运行，还是直接在服务器上编程调试运行呢？这取决于你与服务器的通信速度，还有代码编辑器的渲染速度。像我使用 vscode，如果直接在服务器上编程就得在服务器端安装 remote-ssh 插件以及编程语言所需的插件（譬如 python 使用的 pylance 语法高亮器）。运行速度本就很慢的 vscode，加上网络通信的延迟，运行结果在本地界面的渲染更慢——这也是我之前实习过程中那套工作流遇到的困境。</p><p>在同事的建议下，我们采取本地编程调试+服务器同步文件的工作流。这样就把与服务器的通信限制在必要内容上，减少无关渲染的通信延迟。具体而言，在 vscode 中我们用 syncRsync 插件将本地文件夹与服务器上的远程文件夹关联（这是为了方便在编程时的即时同步，编程始终在本地 vscode 而非在建立 ssh 连接的远程 vscode 中）。在 linux 中则可以利用 sshfs 将远程文件夹挂载到本地，并通过图形界面访问。这两样就代替来 vscode 的 remote-ssh。</p><p>这里方便大家给出我的配置。当然记得先安装 sshfs 以及 vscode 插件 sync-Rsync</p><p><code>~/mount</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#586E75;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;"># default value</span></span>
<span class="line"><span style="color:#268BD2;">REMOTE_DIR</span><span style="color:#859900;">=&lt;</span><span style="color:#2AA198;">remote-host</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">:</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">dir</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">/</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">subdir</span><span style="color:#859900;">&gt;</span></span>
<span class="line"><span style="color:#268BD2;">LOCAL_DIR</span><span style="color:#859900;">=&lt;</span><span style="color:#2AA198;">localhost</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">:</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">dir</span><span style="color:#859900;">&gt;</span><span style="color:#2AA198;">/</span><span style="color:#859900;">&lt;</span><span style="color:#2AA198;">subdir</span><span style="color:#859900;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;"># parse input</span></span>
<span class="line"><span style="color:#859900;">if</span><span style="color:#839496;"> [[ </span><span style="color:#268BD2;">$#</span><span style="color:#859900;"> -gt</span><span style="color:#D33682;"> 0</span><span style="color:#839496;"> ]]; </span><span style="color:#859900;">then</span></span>
<span class="line"><span style="color:#268BD2;">	REMOTE_DIR</span><span style="color:#859900;">=$</span><span style="color:#839496;">1</span></span>
<span class="line"><span style="color:#859900;">fi</span></span>
<span class="line"><span style="color:#859900;">if</span><span style="color:#839496;"> [[ </span><span style="color:#268BD2;">$#</span><span style="color:#859900;"> -gt</span><span style="color:#D33682;"> 1</span><span style="color:#839496;"> ]]; </span><span style="color:#859900;">then</span></span>
<span class="line"><span style="color:#268BD2;">	LOCAL_DIR</span><span style="color:#859900;">=$</span><span style="color:#839496;">2</span></span>
<span class="line"><span style="color:#859900;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;"># create local directory if it does not exist</span></span>
<span class="line"><span style="color:#268BD2;">mkdir</span><span style="color:#CB4B16;"> -p</span><span style="color:#268BD2;"> $LOCAL_DIR</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;"># mount remote folder to local location</span></span>
<span class="line"><span style="color:#268BD2;">sshfs</span><span style="color:#CB4B16;"> -o</span><span style="color:#2AA198;"> reconnect,ServerAliveInterval=15,ServerAliveCountMax=3,follow_symlinks</span><span style="color:#268BD2;"> $REMOTE_DIR</span><span style="color:#268BD2;"> $LOCAL_DIR</span></span></code></pre></div><p>运行<code>mount.sh</code>，远程目录就挂载到本地对应目录了。</p><p><code>.workspace</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#859900;">  &quot;folders&quot;</span><span style="color:#839496;">: [</span></span>
<span class="line"><span style="color:#839496;">    {</span></span>
<span class="line"><span style="color:#859900;">      &quot;path&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;.&quot;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  ],</span></span>
<span class="line"><span style="color:#859900;">  &quot;settings&quot;</span><span style="color:#839496;">: {</span></span>
<span class="line"><span style="color:#859900;">    &quot;sync-rsync.sites&quot;</span><span style="color:#839496;">: [</span></span>
<span class="line"><span style="color:#839496;">      {</span></span>
<span class="line"><span style="color:#859900;">        &quot;localPath&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;&lt;same as LOCAL_DIR&gt;&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;">        &quot;remotePath&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;&lt;same as REMOTE_DIR&gt;&quot;</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    ],</span></span>
<span class="line"><span style="color:#859900;">    &quot;sync-rsync.onSave&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;">    &quot;sync-rsync.autoShowOutput&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">false</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;">    &quot;sync-rsync.autoShowOutputOnError&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;">    &quot;sync-rsync.exclude&quot;</span><span style="color:#839496;">: [</span><span style="color:#2AA198;">&quot;.git&quot;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;.vscode&quot;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;log&quot;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&quot;data&quot;</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre></div>`,10)]))}const A=n(p,[["render",t]]);export{d as __pageData,A as default};
