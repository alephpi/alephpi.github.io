import{_ as o,c as e,ao as n,o as a}from"./chunks/framework.n-91xA-b.js";const f=JSON.parse('{"title":"从 bash 进入 zsh 时出现 compinit: function definition file not found 问题","description":"","frontmatter":{"title":"从 bash 进入 zsh 时出现 compinit: function definition file not found 问题","date":"2025-08-23T04:43:22.913Z","length":"355字","time":"2分钟","aside":true,"hash":-1127040946},"headers":[],"relativePath":"note/Linux/从bash进入zsh时出现compinit: function definition file not found问题.md","filePath":"note/Linux/从bash进入zsh时出现compinit: function definition file not found问题.md"}'),c={name:"note/Linux/从bash进入zsh时出现compinit: function definition file not found问题.md"};function t(p,s,i,d,l,r){return a(),e("div",null,s[0]||(s[0]=[n(`<p>系统： Ubuntu 22.04</p><p>今天登录学校的服务器时，使用我之前 [配置的 zsh](./配置 zsh.md) 突然报错。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span>/etc/zsh/zshrc:112: compinit: function definition file not found</span></span></code></pre></div><p>由于我是用 oh-my-zsh 增强的 zsh，后面还跟了一串 omz 的报错。</p><p>起先尝试了重新更新 omz、删除<code>zcompdump</code>缓存等等跟发现都没用。</p><p>最后在 <a href="https://stackoverflow.com/a/71866174/14789892" target="_blank" rel="noreferrer">这里</a> 找到了原因，原来是 <code>lmod</code> 同时支持 <code>zsh</code> 和 <code>ksh</code>，在有些用户使用 <code>ksh</code> 时，修改了<code>FPATH</code>环境变量，这导致我在使用 <code>zsh</code>时 <code>FPATH</code> 里找不到诸如 <code>compinit</code> 的函数路径。</p><p>经过尝试，在从 bash 进入 zsh 之前需要 <code>unset FPATH</code>，同时添加以下命令到 <code> ~/.zshrc</code> 的头部</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#586E75;font-style:italic;">#.zshrc</span></span>
<span class="line"><span style="color:#859900;">if</span><span style="color:#839496;"> [ </span><span style="color:#859900;">-f</span><span style="color:#839496;"> /projects/share/apps/lmod/lmod/init/zsh ]; </span><span style="color:#859900;">then</span></span>
<span class="line"><span style="color:#268BD2;">    source</span><span style="color:#2AA198;"> /projects/share/apps/lmod/lmod/init/zsh</span></span>
<span class="line"><span style="color:#859900;">fi</span></span></code></pre></div><p>之所以要在 bash 里 <code>unset FPATH</code> 是因为一旦登录 <code>zsh</code> 它就会继承 <code>bash</code>内的 <code>FPATH</code>，而在 <code>.zshrc</code>加入上述命令中则是希望在登录 <code>zsh</code> 后就为<code>zsh</code>初始化正确的 <code>FPATH</code> 以找到相应的函数。</p><p>最后为了方便，我在 <code>~/.bashrc</code> 中加入了以下 alias：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">alias</span><span style="color:#268BD2;"> zsh</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;unset FPATH; exec zsh&quot;</span></span></code></pre></div><p>这样以后就不用反复输入 <code>unset FPATH</code> 了。</p><p>问题得到圆满解决，可惜为了排除故障原因，我把之前的 zsh 缓存全都清空了，现在没有之前运行命令的历史记录了呜呜呜。</p>`,13)]))}const u=o(c,[["render",t]]);export{f as __pageData,u as default};
