import{_ as n,c as o,ao as a,o as p}from"./chunks/framework.n-91xA-b.js";const i=JSON.parse('{"title":"vscode 自定义快捷代码","description":"","frontmatter":{"title":"vscode 自定义快捷代码","date":"2025-07-08T07:35:21.147Z","length":"305字","time":"2分钟","aside":true,"hash":-786204439},"headers":[],"relativePath":"note/编程/vscode自定义快捷代码.md","filePath":"note/编程/vscode自定义快捷代码.md"}'),l={name:"note/编程/vscode自定义快捷代码.md"};function t(e,s,c,r,y,u){return p(),o("div",null,s[0]||(s[0]=[a(`<p>尽管 AI 编程助手已经无处不在，但总有些常用的个人代码片段是 AI 难以补全的，因此借助 vscode 的 Snippets 的功能配置相应代码片段进行快捷输入还是必要的。</p><p>例如这里是我常用的 <a href="./在vscode中用debugpy优雅的调试代码">调试 python 的代码</a>。将其配置为 vscode 的 Snippets 的方法如下：</p><ol><li><code>Ctrl+Shift+P</code> 打开设置栏， 搜索<code>Snippets: Configure Snippets</code>。</li><li>在 <code>python.json</code> 中配置以下代码：<div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#2AA198;">&quot;python debug preamble&quot;</span><span style="color:#839496;">: {</span></span>
<span class="line"><span style="color:#859900;">	&quot;prefix&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;debugpy&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;">	&quot;body&quot;</span><span style="color:#839496;">: [</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;import debugpy&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;try:&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;    debugpy.listen((&#39;localhost&#39;, \${1:9501}))&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;    print(&#39;Waiting for debugger attach&#39;)&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;    debugpy.wait_for_client()&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;except Exception as e:&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;">		&quot;    pass&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">	],</span></span>
<span class="line"><span style="color:#859900;">&quot;description&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;python debug preamble&quot;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre></div></li><li>相应的在 <code>jsonc.json</code>（注意不是<code>json.json</code>）中配置以下代码：<div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#2AA198;">&quot;python debugger setting&quot;</span><span style="color:#839496;">:{</span></span>
<span class="line"><span style="color:#859900;"> &quot;prefix&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;debugpy&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#859900;"> &quot;body&quot;</span><span style="color:#839496;">: [</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;{&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">name</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">Debug \${1:example}.py</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">,&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">type</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">debugpy</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">,&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">request</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">attach</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">,&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">connect</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: {&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;    </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">host</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">localhost</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">,&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;    </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">port</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: \${2:9501}&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  },&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;  </span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">justMyCode</span><span style="color:#CB4B16;">\\&quot;</span><span style="color:#2AA198;">: \${3:false}&quot;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#2AA198;"> 	&quot;}&quot;</span></span>
<span class="line"><span style="color:#839496;"> 	],</span></span>
<span class="line"><span style="color:#859900;"> 	&quot;description&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;debugpy setting&quot;</span></span>
<span class="line"><span style="color:#839496;"> }</span></span></code></pre></div></li></ol><p>这样在 <code>.py</code> 文件中输入前缀 <code>debugpy</code> 就会触发自动补全 2 中的代码体的选项，实现快捷输入，同理在 <code>.vscode/launch.json</code> 文件中输入 <code>debugpy</code> 则可以快捷输入 3 中配置的代码。 此外 <code>\${1:9501}</code> 意为在快捷输入后光标首先移动到这个编辑点，从而可以修改监听端口号，以此类推。</p>`,4)]))}const q=n(l,[["render",t]]);export{i as __pageData,q as default};
