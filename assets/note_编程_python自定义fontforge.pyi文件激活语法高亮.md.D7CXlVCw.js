import{_ as n,c as a,ao as o,o as l}from"./chunks/framework.n-91xA-b.js";const d=JSON.parse('{"title":"python 自定义 fontforge.pyi 文件激活语法高亮","description":"","frontmatter":{"title":"python 自定义 fontforge.pyi 文件激活语法高亮","date":"2024-11-02T08:32:31.241Z","length":"819字","time":"3分钟","aside":true,"hash":-150044198},"headers":[],"relativePath":"note/编程/python自定义fontforge.pyi文件激活语法高亮.md","filePath":"note/编程/python自定义fontforge.pyi文件激活语法高亮.md"}'),p={name:"note/编程/python自定义fontforge.pyi文件激活语法高亮.md"};function e(t,s,r,c,y,i){return l(),a("div",null,s[0]||(s[0]=[o(`<p>这两天学习用 fontforge 制作字体。fontforge 的 python api 很方便，奈何它没有 <a href="https://github.com/fontforge/fontforge/issues/4377" target="_blank" rel="noreferrer">单独的 python 包</a>，而是 <a href="https://github.com/fontforge/fontforge/blob/master/fontforge/python.c" target="_blank" rel="noreferrer">用 python C api 调用其 C 源代码</a>，<a href="https://packages.debian.org/sid/python3-fontforge" target="_blank" rel="noreferrer">最后编译得到<code>.so</code>文件</a>，而非一般的 python module，因此 pylance 无法使用语法高亮。通过询问 gpt 我得知可以用 python index file <code>.pyi</code>文件供 pylance 索引，它的功能和 C 语言中的头文件 <code>.h</code> 类似，只描述函数签名、参数类型、返回类型等接口形状，很适合用于静态分析。与此前在 Typescript 中接触的 <code>.d.ts</code> 文件有异曲同工之妙。</p><p>开始我想有没有一种自动化工具可以直接解析<code>.so</code>库生成<code>.pyi</code>文件，随即找到 <a href="https://mypy-lang.org/" target="_blank" rel="noreferrer">mypy</a>，运行以下代码：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#586E75;font-style:italic;"># sudo apt install python3-fontforge #这会将 fontforge 安装到 ubuntu 系统的顶级 python 解释器（/bin/python) 环境 (dist-package) 中</span></span>
<span class="line"><span style="color:#268BD2;">pip</span><span style="color:#2AA198;"> install</span><span style="color:#2AA198;"> mypy</span></span>
<span class="line"><span style="color:#268BD2;">stubgen</span><span style="color:#CB4B16;"> -m</span><span style="color:#2AA198;"> fontforge</span><span style="color:#CB4B16;"> -o</span><span style="color:#2AA198;"> .</span><span style="color:#586E75;font-style:italic;"> # 前提是从 apt 上安装了 python3-fontforge 包，而不是打包好的应用程序</span></span></code></pre></div><p>生成代码（节选）如下：</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#859900;">from</span><span style="color:#839496;"> _typeshed </span><span style="color:#859900;">import</span><span style="color:#839496;"> Incomplete</span></span>
<span class="line"><span style="color:#859900;">from</span><span style="color:#839496;"> typing </span><span style="color:#859900;">import</span><span style="color:#839496;"> Any</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">__date__: </span><span style="color:#859900;">str</span></span>
<span class="line"><span style="color:#839496;">__version__: </span><span style="color:#859900;">str</span></span>
<span class="line"><span style="color:#839496;">hooks: </span><span style="color:#859900;">dict</span></span>
<span class="line"><span style="color:#839496;">spiroCorner: </span><span style="color:#859900;">int</span></span>
<span class="line"><span style="color:#839496;">spiroG2: </span><span style="color:#859900;">int</span></span>
<span class="line"><span style="color:#839496;">spiroG4: </span><span style="color:#859900;">int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#CB4B16;"> font</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">    activeLayer: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    ascent: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    bitmapSizes: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    capHeight: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    changed: Incomplete</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">    @</span><span style="color:#859900;">classmethod</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> __init__</span><span style="color:#839496;">(cls, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs) -&gt; </span><span style="color:#B58900;">None</span><span style="color:#839496;">: </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addAnchorClass</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addContextualSubtable</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addExtrema</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addInflections</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addKerningClass</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addLookup</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addLookupSubtable</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#CB4B16;"> glyph</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">    activeLayer: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    altuni: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    anchorPoints: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    anchorPointsWithSel: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    background: Incomplete</span></span>
<span class="line"><span style="color:#839496;">    changed: Incomplete</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addAnchorPoint</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addExtrema</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addHint</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addInflections</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addPosSub</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> addReference</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> appendAccent</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> autoHint</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> autoInstr</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> autoTrace</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> balance</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> boundingBox</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> build</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> canonicalContours</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> canonicalStart</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> changeWeight</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> clear</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> cluster</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> condenseExtend</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> correctDirection</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> doUndoLayer</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> draw</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> exclude</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> export</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> genericGlyphChange</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> getPosSub</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">    def</span><span style="color:#268BD2;"> glyphPen</span><span style="color:#839496;">(self, </span><span style="color:#859900;">*</span><span style="color:#839496;">args, </span><span style="color:#859900;">**</span><span style="color:#839496;">kwargs): </span><span style="color:#CB4B16;">...</span></span></code></pre></div><p>嗯，模块级属性、方法，类级属性、方法，该有的都有，但是没有我最想要的参数名提示、类型提示、docstring。毕竟，<a href="https://fontforge.org/docs/scripting/python/fontforge.html" target="_blank" rel="noreferrer">fontforge api 的文档</a> 里写的可比这详细多了。于是我在想，这个文档是不是自动生成的？如果是的话，是不是可以用生成文档的办法生成 <code>.pyi</code>？</p><p>果然经过一番搜索，fontforge 使用了 <a href="https://www.sphinx-doc.org/en/master/" target="_blank" rel="noreferrer">sphinx</a> 生成文档。然而，在源码仓库里看不懂 <a href="https://github.com/fontforge/fontforge/blob/master/doc/sphinx/_extensions/fontforge_scripting_domain.py" target="_blank" rel="noreferrer">调用 sphinx 的代码</a>。对于正常的 python package，sphinx 有一套方便的流程，但恕我实在搞不定 fontforge 这个大型项目。等哪一天 LLM 可以直接分析整个代码库，我一定要问问 fontforge 的 sphinx 文档是怎么自动生成的。</p><p>最后万般无奈，我还是从 fontforge 文档提供的函数签名一点点改写 <code>.pyi</code> 文件，好在我要使用的功能不多，所以工作量不大。只需要把该文件放在工作目录下，vscode 的 pylance 就会自动找到，更保险的做法是配置 <code>settings.json</code> 如下：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#859900;">  &quot;python.analysis.extraPaths&quot;</span><span style="color:#839496;">: [</span></span>
<span class="line"><span style="color:#2AA198;">    &quot;path/to/your/type_stubs&quot;</span></span>
<span class="line"><span style="color:#839496;">  ],</span></span>
<span class="line"><span style="color:#859900;">  &quot;python.analysis.typeCheckingMode&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;strict&quot;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre></div>`,9)]))}const g=n(p,[["render",e]]);export{d as __pageData,g as default};
